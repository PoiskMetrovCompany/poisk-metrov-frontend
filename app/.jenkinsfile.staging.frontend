#!groovy
properties([disableConcurrentBuilds()])
pipeline {
    agent any
    options {
        timestamps()
    }

    environment {
        DEPLOY_SERVER = '89.104.66.221'
        DEPLOY_PATH = '/var/www/poisk.metrov.site'
    }

    stages {
        stage('Проверка статуса') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'server-staging-password', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                        sshpass -p '${PASSWORD}' ssh -o StrictHostKeyChecking=no ${USERNAME}@${DEPLOY_SERVER} "
                            cd ${DEPLOY_PATH} &&
                            git checkout production &&
                            git status &&
                            echo 'Сервер доступен и готов к развертыванию'
                        "
                    """
                }
            }
        }

        stage('Стягивание изменений') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'server-staging-password', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                        sshpass -p '${PASSWORD}' ssh -o StrictHostKeyChecking=no ${USERNAME}@${DEPLOY_SERVER} "
                            cd ${DEPLOY_PATH} &&
                            git pull
                        "
                    """
                }
            }
        }

        stage('Создание билда') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'server-staging-password', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                        sshpass -p '${PASSWORD}' ssh -o StrictHostKeyChecking=no ${USERNAME}@${DEPLOY_SERVER} "
                            cd ${DEPLOY_PATH} &&
                            npm i &&
                            npm run build
                        "
                    """
                }
            }
        }

        stage('Создание билда') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'server-staging-password', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                        sshpass -p '${PASSWORD}' ssh -o StrictHostKeyChecking=no ${USERNAME}@${DEPLOY_SERVER} "
                            cd ${DEPLOY_PATH} &&
                            systemctl stop poisk-next &&
                            systemctl start poisk-next
                        "
                    """
                }
            }
        }

        stage('Запуск тестов') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'server-staging-password', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                        sshpass -p '${PASSWORD}' ssh -o StrictHostKeyChecking=no ${USERNAME}@${DEPLOY_SERVER} "
                            cd ${DEPLOY_PATH} &&
                            echo 'TODO: необходимо реализовать ТЕСТЫ'
                        "
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'Развертывание из development прошло успешно!'
        }
        failure {
            echo 'Ошибка развёртывания!'
        }
    }
}